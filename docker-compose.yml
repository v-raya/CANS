version: '3.2'
services:
  db2:
    image: cwds/db2data
    hostname: db2data
    ports:
      - ${DB_CMS_DB2_PORT}:50000
    networks:
      - cans

  postgres:
    image: cwds/postgresql_data:0.9.4_680-RC
    hostname: postgresql_data
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - cans
    environment:
      POSTGRES_PORT: ${POSTGRES_PORT}

  perry:
    image: cwds/perry
    hostname: perry
    ports:
      - ${PERRY_PORT}:8080
      - ${PERRY_ADMIN_PORT}:9082
    networks:
      - cans
    environment:
      PERRY_PORT: ${PERRY_PORT}
      DEV_MODE: ${DEV_MODE}
      LOG_LEVEL: ${LOG_LEVEL}

  redis:
    image: 'redis:3.0'
    ports:
      - '6379:6379'

  dora:
    image: cwds/dora:latest
    hostname: dora
    depends_on:
      - perry
      - elasticsearch
    expose:
      - 8080
    networks:
      - cans
    environment:
      SHIRO_CONFIG_PATH: /opt/cwds-dora/config/shiro.ini
      ES_HOST: elasticsearch
      ES_PORT: 9200
      ES_NODES: elasticsearch:9200
      PERRY_URL: http://perry:8080/perry/authn/login
      LOGOUT_URL: http://perry:8080/perry/authn/logout
      XPACK_ENABLED: 'true'
      XPACK_USER: elastic
      XPACK_PASSWORD: changeme
      PERRY_VALIDATION_URL: http://perry:8080/perry/authn/validate

  elasticsearch:
    image: cwds/elasticsearch_xpack_data:latest
    hostname: elasticsearch
    depends_on:
      - perry
    expose:
      - 9200
      - 9300
    networks:
      - cans
    environment:
      TOKEN_VALIDATION_URL: http://perry:8080/perry/authn/validate?token=

  cans-api:
    image: cwds/cans-api:0.11.2_392-RC
    hostname: cans-api
    depends_on:
      - db2
      - postgres
      - perry
    restart: on-failure
    ports:
      - ${CANS_API_PORT}:8080
    networks:
      - cans
    environment:
      LOGIN_URL: ${LOGIN_URL}
      LOGOUT_URL: ${LOGOUT_URL}
      SWAGGER_TOKEN_URL: ${SWAGGER_TOKEN_URL}
      SWAGGER_JSON_URL: ${SWAGGER_JSON_URL}
      SWAGGER_CALLBACK_URL: ${SWAGGER_CALLBACK_URL}
      SHIRO_CONFIG_PATH: ${SHIRO_CONFIG_PATH}
      KEY_STORE_FILE: ${KEY_STORE_FILE}
      AUTHORIZATION_ENABLED: ${AUTHORIZATION_ENABLED}
      DB_NS_JDBC_URL: ${DB_NS_JDBC_URL}
      DB_NS_SCHEMA: ${DB_NS_SCHEMA}
      DB_NS_USER: ${DB_NS_USER}
      DB_NS_PASSWORD: ${DB_NS_PASSWORD}

  cans-web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    depends_on:
      - redis
      - cans-api
      - perry
      - dora
    ports:
      - 3000:3000
    networks:
      - cans
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      PERRY_BASE_URL: 'http://${HOST}:${PERRY_PORT}/perry'
      CANS_API_BASE_URL: ${CANS_API_BASE_URL}
      CANS_AUTHORIZATION_ENABLED: ${CANS_AUTHORIZATION_ENABLED}
      REDIS_HOST: 'redis'
      REDIS_PORT: 6379
      DORA_API_URL: 'http://dora:8080'

  cans-test:
    build:
      context: .
      dockerfile: docker/test/Dockerfile
    networks:
      - cans
    volumes:
      - type: bind
        source: ./spec
        target: /app/spec
    environment:
      CANS_WEB_BASE_URL: ${CANS_WEB_BASE_URL}

networks:
  cans:
